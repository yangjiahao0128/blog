<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>前端性能优化</title>
    <url>/blog/2019/05/05/8s7h3j1h/</url>
    <content><![CDATA[<h1 id="网络方面："><a href="#网络方面：" class="headerlink" title="网络方面："></a>网络方面：</h1><ol>
<li>减少http请求（合并js/css文件、雪碧图、使用base64表示简单的图片）；</li>
<li>减少资源体积（gzip压缩、js混淆、css压缩、图片压缩）；</li>
<li>缓存（DNS缓存、CDN部署与缓存、http缓存）；</li>
<li>移动端优化（首屏加载优化、慎用web字体）；</li>
</ol>
<h1 id="渲染及dom操作："><a href="#渲染及dom操作：" class="headerlink" title="渲染及dom操作："></a>渲染及dom操作：</h1><ol>
<li>优化网页渲染（文件引用顺序css/js、避免内联样式）；</li>
<li>DOM操作优化（多使用className、多事件代理、多使用css动画、减少DOM操作、少使用css表达式）；</li>
<li>操作规范（img/iframe中src、css属性为0省略单位、禁止图片缩放、CSS减少重复多继承）；</li>
<li>移动端优化（长列表优化、防抖和节流、<del>~</del>能力不足，待探究）；</li>
</ol>
<h1 id="数据方面："><a href="#数据方面：" class="headerlink" title="数据方面："></a>数据方面：</h1><ol>
<li>图片加载处理（预加载、 懒加载、首屏加载时进度条展示）；</li>
<li>异步请求的优化（使用正常的json数据格式进行交互、数据缓存、数据埋点与统计）；</li>
</ol>
<img src="/blog/2019/05/05/8s7h3j1h/mklm32lk3m2k434313244.webp" class="" title="性能优化图">]]></content>
      <tags>
        <tag>性能优化</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-cli@2.0脚手架搭建与打包</title>
    <url>/blog/2019/01/01/My-New-Post/</url>
    <content><![CDATA[<h1 id="一、vue-cli脚手架"><a href="#一、vue-cli脚手架" class="headerlink" title="一、vue-cli脚手架"></a>一、vue-cli脚手架</h1><p><code>vue.js</code> 核心构成：vuex，vue-cli，vue-router，vue-resource<br>&nbsp;&nbsp;&nbsp;&nbsp;<em>1.1vue-cli</em> ：脚手架，为了保证各施工过程 顺利进行而搭建的工作平台，<br>&nbsp;&nbsp;&nbsp;&nbsp;<em>1.2实际开发</em> ：开发过程中，从零开始构建项目非常的麻烦，所以各种脚手架就应运而生。常见的脚手架：yoeman，express-generator，vue-cli<br>&nbsp;&nbsp;&nbsp;&nbsp;<em>特点</em> ：功能丰富，使用他们能够快速的搭建一个完整的项目，开发者只需要在生成的项目结构的基础上进行开发即可非常高效。<br>&nbsp;&nbsp;&nbsp;&nbsp;极大地降低了webpack的使用难度，并支持热更新，有webpack-dev-server支持，相当于启动了一个请求服务器，帮你搭建了一个测试环境，最为开发者只需要关注开发就ok</p>
<h1 id="二、安装vue-cli"><a href="#二、安装vue-cli" class="headerlink" title="二、安装vue-cli"></a>二、安装vue-cli</h1><p> &nbsp;&nbsp;<em>2.1</em> 需要使用<code>npm</code>，全局安装<code>webpack</code>，由于从<code>webpack@4.0</code>开始需要安装<code>webpack-cli</code><br>&nbsp;&nbsp;<em>2.2</em> 先执行CMD<br>&nbsp;&nbsp;webpack -v  确认是否全局安装过webpack,没有的话执行 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install -g webpack</span><br></pre></td></tr></table></figure>
<p>&nbsp;&nbsp;再全局安装  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install webpack-cli -g</span><br></pre></td></tr></table></figure>
<p>&nbsp;&nbsp;全局安装<code>vue-cli</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i -g vue-cli  或者  npm install --globel vue-cli</span><br></pre></td></tr></table></figure>
<p>&nbsp;&nbsp;安装完成后确认是否安装过：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vue -V</span><br></pre></td></tr></table></figure>
<p>&nbsp;&nbsp;CMD:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vue list        &#x2F;&#x2F;列出可用的模板</span><br></pre></td></tr></table></figure>
<h1 id="三、利用vue-cli构建项目"><a href="#三、利用vue-cli构建项目" class="headerlink" title="三、利用vue-cli构建项目"></a>三、利用vue-cli构建项目</h1><p>   <em>3.1</em> 首先建一个文件夹<br>   然后：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd demo</span><br></pre></td></tr></table></figure>
<p>   将构建的项目放进demo文件夹<br>   执行： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vue init webpack + 项目名称</span><br></pre></td></tr></table></figure>
<p>   执行后显示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Project name 确认项目名称</span><br><span class="line">Project description 项目描述</span><br><span class="line">Author  作者</span><br><span class="line">Vue build</span><br><span class="line"> Runtime-only: about 6KB lighter min+gzip, but templates (or any Vue-specific HTML) are ONLY</span><br><span class="line"> allowed in .vue files - render functions are required elsewhere 推荐的运行加编译</span><br><span class="line">Install vue-router  是否安装vue-router</span><br><span class="line">Use ESLint to lint your code 是否使用ESLint管理代码(这块一直又爱又恨)</span><br><span class="line">Set up unit tests 是否建立单元测试</span><br><span class="line">Setup e2e tests with Nightwatch 是否安装端对端的测试</span><br></pre></td></tr></table></figure>
<blockquote>
<p>vue init webpack项目名称：适用于中大型项目<br>vue init webpack-simple：小型项目</p>
</blockquote>
<p>然后 cd 进入项目<br>运行项目 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure>
<h1 id="四、打包上线"><a href="#四、打包上线" class="headerlink" title="四、打包上线"></a>四、打包上线</h1><p>自己的项目放在 <em>src</em> 文件夹下<br>编辑开发完成后打包<br>在<code>cmd</code>中执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure>
<p>打包成功后：默认会生成 <em>dist</em> 文件夹项目上线，只需要将 <em>dist</em> 文件夹放在<code>nginx</code>映射的服务器就可以了<br><img src="https://upload-images.jianshu.io/upload_images/7255677-087930a3da74c424.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="vuejs"></p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;以上，<a href="mailto:&#86;&#x75;&#101;&#45;&#99;&#108;&#x69;&#x40;&#x32;&#46;&#48;">&#86;&#x75;&#101;&#45;&#99;&#108;&#x69;&#x40;&#x32;&#46;&#48;</a>脚手架基本搭建在日常的使用中基本就没有什么大问题了，只要多加练习，配合好用的官网，写起东西来肯定会行云流水。💗</p>
]]></content>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
</search>
